package View;

import Business.CustomerController;
import Core.Helper;
import Entity.Customer;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class CustomerUI extends JFrame {
    private JPanel MainContainer;
    private JLabel lbl_name;
    private JTextField fld_name;
    private JLabel lbl_type;
    private JComboBox<Customer.ETYPE> cmb_type;
    private JLabel lbl_phone;
    private JTextField fld_phone;
    private JLabel lbl_mail;
    private JTextField fld_mail;
    private JLabel lbl_adress;
    private JTextArea txtArea_adress;
    private JButton btn_save;
    private Customer customer;
    private CustomerController customerController = new CustomerController();

    public CustomerUI(Customer customer) {
        // if customer is null, we realize that we are adding new customer, if it is not, we are editing a customer
        this.customer = customer;
        this.setContentPane(MainContainer);

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 1000, 400);
        setLocationRelativeTo(null);
        setResizable(false);
        setVisible(true);


        // init combo box
        this.cmb_type.setModel(new DefaultComboBoxModel<>(Customer.ETYPE.values()));
        // init combo box


        if (customer.getId() == null) {
            this.setTitle("Add New Customer");
        } else {
            // If the customer has an ID, set the title to "Edit Customer" and populate the fields with existing data
            this.setTitle("Edit Customer");
            this.fld_name.setText(customer.getName());
            this.fld_phone.setText(customer.getPhone());
            this.fld_mail.setText(customer.getMail());
            this.txtArea_adress.setText(customer.getAddress());
            this.cmb_type.getModel().setSelectedItem(this.customer.getType());
        }

        btn_save.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTextField[] check = {fld_mail, fld_name, fld_phone};
                if (Helper.isTextFieldListEmpty(check)) {
                    Helper.showMessage("FILL_PROPERLEY");
                } else if (!(Helper.isTextFieldEmpty(fld_mail)) && !(Helper.isValidEmail(fld_mail.getText()))) {
                    Helper.showMessage("INVALID_MAIL");
                } else {
                    boolean result = false;

                    // Set customer properties from the form fields
                    customer.setPhone(fld_phone.getText());
                    customer.setMail(fld_mail.getText());
                    customer.setName(fld_name.getText());
                    customer.setAddress(txtArea_adress.getText());
                    customer.setType((Customer.ETYPE) cmb_type.getSelectedItem());

                    // If the customer has no ID, it's a new customer, so save it
                    if (customer.getId() == null || customer.getId().toString().isEmpty()) {

                        result = customerController.save(customer);
                    } else {
                        // If the customer has an ID, update the existing customer
                        result = customerController.update(customer);
                    }
                    if (result == true) {
                        Helper.showMessage("CUSTOMER_UPDATED_SUCCESSFULLY");
                        dispose();
                    } else {
                        Helper.showMessage("CUSTOMER_UPDATED_FAILED");
                    }
                }


            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MainContainer = new JPanel();
        MainContainer.setLayout(new GridLayoutManager(11, 1, new Insets(10, 10, 10, 10), -1, -1));
        lbl_name = new JLabel();
        lbl_name.setText("Name:");
        MainContainer.add(lbl_name, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lbl_type = new JLabel();
        lbl_type.setText("Type:");
        MainContainer.add(lbl_type, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lbl_phone = new JLabel();
        lbl_phone.setText("Phone:");
        MainContainer.add(lbl_phone, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fld_name = new JTextField();
        MainContainer.add(fld_name, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        cmb_type = new JComboBox();
        MainContainer.add(cmb_type, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fld_phone = new JTextField();
        MainContainer.add(fld_phone, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        lbl_mail = new JLabel();
        lbl_mail.setText("Mail:");
        MainContainer.add(lbl_mail, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fld_mail = new JTextField();
        MainContainer.add(fld_mail, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        lbl_adress = new JLabel();
        lbl_adress.setText("Adress");
        MainContainer.add(lbl_adress, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtArea_adress = new JTextArea();
        MainContainer.add(txtArea_adress, new GridConstraints(9, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        btn_save = new JButton();
        btn_save.setText("Save");
        MainContainer.add(btn_save, new GridConstraints(10, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MainContainer;
    }

}
